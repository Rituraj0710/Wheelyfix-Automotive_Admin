import { NavLink, Outlet } from "react-router-dom"; import { useEffect, useState } from "react"; import HeaderBar from "./HeaderBar"; import FooterBar from "./FooterBar"; export default function Layout() { const [dark, setDark] = useState(() => localStorage.getItem("adminTheme") === "dark"); useEffect(() => { const root = document.documentElement; if (dark) { root.classList.add("dark"); localStorage.setItem("adminTheme", "dark"); } else { root.classList.remove("dark"); localStorage.setItem("adminTheme", "light"); } }, [dark]); const handleLogout = () => { localStorage.removeItem("token"); localStorage.removeItem("isAdmin"); window.location.href = "/login"; }; return ( <div className="layout"> <aside className="sidebar"> <div className="logo"> <div className="logo-icon"></div> <div className="logo-text"> <span className="logo-title">WHEELYFIX</span> <span className="logo-subtitle">Admin</span> </div> </div> <nav className="sidebar-nav"> <NavLink to="/" end className={({ isActive }) => `nav-link ${isActive ? "active" : ""}`}>  Dashboard </NavLink> <NavLink to="/users" className={({ isActive }) => `nav-link ${isActive ? "active" : ""}`}>  Users </NavLink> <NavLink to="/services" className={({ isActive }) => `nav-link ${isActive ? "active" : ""}`}>  Services </NavLink> <NavLink to="/brands" className={({ isActive }) => `nav-link ${isActive ? "active" : ""}`}>  Brands/Models </NavLink> <NavLink to="/pricing" className={({ isActive }) => `nav-link ${isActive ? "active" : ""}`}>  Pricing </NavLink> <NavLink to="/cms" className={({ isActive }) => `nav-link ${isActive ? "active" : ""}`}>  CMS </NavLink> <NavLink to="/bookings" className={({ isActive }) => `nav-link ${isActive ? "active" : ""}`}>  Bookings </NavLink> <NavLink to="/payments" className={({ isActive }) => `nav-link ${isActive ? "active" : ""}`}>  Payments </NavLink> <NavLink to="/settings" className={({ isActive }) => `nav-link ${isActive ? "active" : ""}`}>  Settings </NavLink> </nav> <div className="sidebar-footer"> <button className="theme-toggle" onClick={() => setDark(!dark)}> {dark ? " Light" : " Dark"} Mode </button> <button className="logout-btn" onClick={handleLogout}>  Logout </button> </div> </aside> <div className="main"> <HeaderBar right={<div className="header-actions"> <button className="btn theme-btn" onClick={() => setDark(!dark)}> {dark ? " Light" : " Dark"} </button> </div>} /> <div className="content"> <Outlet /> </div> <FooterBar /> </div> </div> ); }
